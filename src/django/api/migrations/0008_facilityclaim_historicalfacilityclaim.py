# Generated by Django 2.0.13 on 2019-06-03 16:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0007_add_claim_a_facility_feature_switch'),
    ]

    operations = [
        migrations.CreateModel(
            name='FacilityClaim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(help_text='The contact person for the facility claim', max_length=200)),
                ('email', models.EmailField(help_text='The contact email for the facility claim', max_length=254)),
                ('phone_number', models.CharField(help_text='The contact phone number for the facility claim', max_length=200)),
                ('company_name', models.CharField(blank=True, help_text='The company name for the facility', max_length=200)),
                ('website', models.CharField(blank=True, help_text='The website for the facility', max_length=200)),
                ('facility_description', models.TextField(blank=True, help_text='A description of the facility')),
                ('verification_method', models.TextField(blank=True, help_text='An explanation of how the facility can be verified')),
                ('preferred_contact_method', models.CharField(choices=[('EMAIL', 'EMAIL'), ('PHONE', 'PHONE')], help_text='The preferred contact method: email or phone', max_length=200)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('DENIED', 'DENIED'), ('REVOKED', 'REVOKED')], default='PENDING', help_text='The current status of this facility claim', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contributor', models.ForeignKey(help_text='The contributor who submitted this facility claim', on_delete=django.db.models.deletion.PROTECT, to='api.Contributor')),
                ('facility', models.ForeignKey(help_text='The facility for which this claim has been submitted', on_delete=django.db.models.deletion.PROTECT, to='api.Facility')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalFacilityClaim',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('contact_person', models.CharField(help_text='The contact person for the facility claim', max_length=200)),
                ('email', models.EmailField(help_text='The contact email for the facility claim', max_length=254)),
                ('phone_number', models.CharField(help_text='The contact phone number for the facility claim', max_length=200)),
                ('company_name', models.CharField(blank=True, help_text='The company name for the facility', max_length=200)),
                ('website', models.CharField(blank=True, help_text='The website for the facility', max_length=200)),
                ('facility_description', models.TextField(blank=True, help_text='A description of the facility')),
                ('verification_method', models.TextField(blank=True, help_text='An explanation of how the facility can be verified')),
                ('preferred_contact_method', models.CharField(choices=[('EMAIL', 'EMAIL'), ('PHONE', 'PHONE')], help_text='The preferred contact method: email or phone', max_length=200)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('DENIED', 'DENIED'), ('REVOKED', 'REVOKED')], default='PENDING', help_text='The current status of this facility claim', max_length=200)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contributor', models.ForeignKey(blank=True, db_constraint=False, help_text='The contributor who submitted this facility claim', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Contributor')),
                ('facility', models.ForeignKey(blank=True, db_constraint=False, help_text='The facility for which this claim has been submitted', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Facility')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical facility claim',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
