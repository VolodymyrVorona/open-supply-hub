# Generated by Django 3.2.4 on 2023-09-26 11:11

from django.db import migrations, models
from django.db.migrations.state import StateApps
from django.contrib.gis.db.backends.postgis.schema import PostGISSchemaEditor

from api.models import FacilityListItem
from api.models import Source
from api.helpers.helpers import ( 
    parse_raw_data,
    get_raw_json,
)

def fill_raw_json_column(
        apps: StateApps, schema_editor: PostGISSchemaEditor) -> None:
    """
    Fill the custom_text_search column in the api_facilityindex
    table by concatenating the array of custom values from the
    custom_text column into a string.
    """

    facilities = (FacilityListItem.objects.all())
    print('\nUpdaing raw_json column...')
    for facility in facilities:
        if (facility.source.source_type == Source.LIST):
            facility.raw_header = ''
            facility.raw_json = parse_raw_data(facility.raw_data)
        else:
            facility.raw_header = facility.source.facility_list.header
            facility.raw_json = get_raw_json(facility.raw_data)
       
    print('Saving raw_json column...')
    FacilityListItem.objects.bulk_update(facilities, ['raw_json', 'raw_header'], batch_size=1000)

def reverse_fill_raw_json_column(
        apps: StateApps, schema_editor: PostGISSchemaEditor) -> None:
    pass
  
        




class Migration(migrations.Migration):

    dependencies = [
        ('api', '0123_fix_collection_of_contributor_and_list_ids'),
    ]

    operations = [
        migrations.AddField(
            model_name='facilitylistitem',
            name='raw_header',
            field=models.TextField(default='', help_text='The full, unparsed CSV header as it appeared in the file.'),
        ),
        migrations.AddField(
            model_name='facilitylistitem',
            name='raw_json',
            field=models.JSONField(default=dict, help_text='Key-value pairs of the parsed CSV row and header.'),
        ),
        # migrations.RunPython(
        #     fill_raw_json_column, reverse_fill_raw_json_column
        # ),
    ]
